			splitDOMByElement(parentElement, splitElementClassName) {
				// 获取所有子元素
				var children = parentElement.children;

				// 创建一个数组，用于存放分割后的小段
				var chunks = [];
				var currentChunk = document.createElement('div');

				// 迭代子元素
				for (var i = 0; i < children.length; i++) {
					var child = children[i];

					// 复制子元素并添加到当前小段
					var clonedChild = child.cloneNode(true);
					currentChunk.appendChild(clonedChild);

					// 如果当前子元素是分割元素，则将当前小段添加到结果数组中，并重置当前小段
					if (child.classList.contains(splitElementClassName)) {
						chunks.push(currentChunk);
						currentChunk = document.createElement('div');
					}

					// 处理特定id为 "detection" 的<div>，按class="detection"分割为每5个一组
					if (child.id === 'detection') {
						var detectionChildren = child.getElementsByClassName('detection');

						for (var j = 0; j < detectionChildren.length; j++) {
							var detectionChild = detectionChildren[j];
							var clonedDetectionChild = detectionChild.cloneNode(true);
							currentChunk.appendChild(clonedDetectionChild);

							// 当达到每5个一组时，添加到结果数组中，并重置当前小段
							if ((j + 1) % 5 === 0) {
								// 查看是否有标题元素
								var h3Element = currentChunk.querySelector('h3');
								// 检查是否成功获取了 <h3> 元素
								if (h3Element) {
									// 获取 <h3> 元素的父元素
									var parentDiv = h3Element.parentNode;
									// 获取父元素中所有具有 class="detection" 的子元素
									var detectionElements = parentDiv.querySelectorAll('.detection');
									// 遍历并移除每个具有 class="detection" 的子元素
									detectionElements.forEach(function(detectionElement) {
										detectionElement.remove();
									});
								}
								chunks.push(currentChunk);
								currentChunk = document.createElement('div');
							}
						}
					}
				}

				// 将最后一个小段添加到结果数组中
				if (currentChunk.children.length > 0) {
					chunks.push(currentChunk);
				}

				return chunks;
			}
